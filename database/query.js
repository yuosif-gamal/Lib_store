exports.queryList = {
    GET_ALL_STORS: 'SELECT * FROM BMS.STORE',
    SAVE_NEW_STORE: 'INSERT INTO bms.store(store_name, store_code, store_address, created_on, created_by) VALUES($1,$2, $3, $4, $5)',
    GET_ALL_BOOKS: 'SELECT book_id, book_title, author_id, book_pages FROM bms.book',
    GET_BOOK_DETAILS_BY_ID: `SELECT BOOK_ID, BOOK_TITLE, BOOK_DESCRIPTION, author_id, BOOK_PUBLISHER, BOOK_PAGES, BOOK.STORE_id, BOOK.CREATED_ON, BOOK.CREATED_BY, STORE.STORE_NAME, STORE.STORE_ADDRESS FROM BMS.BOOK INNER JOIN BMS.STORE ON BOOK.STORE_id = STORE.STORE_ID WHERE BOOK_ID = $1`,
    GET_BOOK_DETAILS_BY_TITLE: `SELECT BOOK_TITLE, BOOK_DESCRIPTION, author_id, BOOK_PUBLISHER, BOOK_PAGES, BOOK.STORE_id, BOOK.CREATED_ON, BOOK.CREATED_BY, STORE.STORE_NAME, STORE.STORE_ADDRESS FROM BMS.BOOK INNER JOIN BMS.STORE ON BOOK.STORE_id = STORE.STORE_ID WHERE BOOK_TITLE = $1`,
    GET_ALL_BOOKS_IN_STORE: 'SELECT * FROM bms.book WHERE store_id = $1',
    UPDATE_BOOK: 'UPDATE bms.book SET book_title = $1, book_description = $2,  book_publisher = $3, book_pages = $4, store_id = $5,author_id =$6, created_on = $7, created_by = $8 WHERE book_id = $9',
    SAVE_NEW_BOOK: 'INSERT INTO bms.book (book_title, book_description, book_publisher, book_pages, store_id,author_id, created_on, created_by) VALUES($1, $2, $3, $4, $5, $6, $7, $8)',
    DELETE_BOOK: 'DELETE FROM bms.book WHERE book_id = $1',
    GET_ALL_USERS: 'SELECT * FROM BMS.USERS',
    GET_USER_DETAILS: 'SELECT * FROM BMS.users WHERE USER_ID = $1',
    SAVE_NEW_USER: 'INSERT INTO bms.users (username, "password", email, created_on) VALUES($1, $2, $3, $4)',
    IS_USER_EXIST_QUERY: 'SELECT COUNT(USER_ID) FROM BMS.users WHERE LOWER(USERNAME) = LOWER($1) OR LOWER(EMAIL) = LOWER($2)',
    SAVE_NEW_AUTHOR: 'INSERT INTO bms.author (author_name, author_nationality ,created_on, created_by,age) VALUES ($1, $2, $3,$4,$5)',
    GET_ALL_AUTHORS: 'SELECT * FROM bms.author',
    UPDATE_AUTHOR_BY_ID: 'UPDATE bms.author SET age = $1 WHERE author_id = $2',
    DELETE_AUTHOR_BY_ID: 'DELETE FROM bms.author WHERE author_id = $1',
    GET_AUTHOR_BY_ID: 'SELECT * FROM bms.author WHERE author_id = $1',
    GET_BOOKS_BY_AUTHOR_ID: 'SELECT * FROM bms.book WHERE author_id = $1',
    GET_BOOKS_BY_AUTHOR_NAME: 'SELECT b.book_title, b.book_description, b.author_id, b.book_publisher, b.book_pages, b.store_id, b.created_on, b.created_by FROM bms.book b INNER JOIN bms.author a ON b.author_id = a.author_id WHERE a.author_name = CAST($1 AS varchar)',
    ARRANGE_BOOKS_ALPHABETICALLY: `SELECT *FROM bms.arrange_books_alphabetically();`,
    TOTAL_BOOKS_IN_STORE: 'SELECT bms.calculate_number_total_books_in_store($1);',
    GET_BOOKS_BY_PAGE_RANGE:'SELECT * FROM bms.get_books_in_range_of_pages($1, $2);',

  };